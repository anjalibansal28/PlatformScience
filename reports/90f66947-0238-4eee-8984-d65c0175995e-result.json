{"name": "Alphabets passed as a coordinates for param - roomSize in the Request Body and getting Expected output", "status": "broken", "statusDetails": {"message": "urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=8080): Max retries exceeded with url: /v1/cleaning-sessions (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x03C86450>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it',))\n", "trace": "  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\pltscisdetstepsimpl.py\", line 51, in send_post_request\n    context.response = http.request(\"POST\", context.request_endpoint, body=encoded_data, headers=context.request_headers)\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\request.py\", line 79, in request\n    method, url, fields=fields, headers=headers, **urlopen_kw\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\request.py\", line 170, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\poolmanager.py\", line 375, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 796, in urlopen\n    **response_kw\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 796, in urlopen\n    **response_kw\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 796, in urlopen\n    **response_kw\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 756, in urlopen\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\util\\retry.py\", line 574, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\n"}, "steps": [{"name": "Given I Set POST request api endpoint", "status": "passed", "start": 1628197371314, "stop": 1628197371314}, {"name": "When I Set HEADER param request content type as \"application/json.\"", "status": "passed", "start": 1628197371314, "stop": 1628197371315}, {"name": "When Set invalid request Body by passing alphabets for the room size parameters", "status": "passed", "start": 1628197371315, "stop": 1628197371316}, {"name": "And Send a POST HTTP request", "status": "broken", "statusDetails": {"message": "urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=8080): Max retries exceeded with url: /v1/cleaning-sessions (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x03C86450>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it',))\n", "trace": "  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\pltscisdetstepsimpl.py\", line 51, in send_post_request\n    context.response = http.request(\"POST\", context.request_endpoint, body=encoded_data, headers=context.request_headers)\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\request.py\", line 79, in request\n    method, url, fields=fields, headers=headers, **urlopen_kw\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\request.py\", line 170, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\poolmanager.py\", line 375, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 796, in urlopen\n    **response_kw\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 796, in urlopen\n    **response_kw\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 796, in urlopen\n    **response_kw\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 756, in urlopen\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\n  File \"c:\\users\\bansaan\\pycharmprojects\\platformscience\\venv\\lib\\site-packages\\urllib3\\util\\retry.py\", line 574, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\n"}, "start": 1628197371316, "stop": 1628197387362}, {"name": "Then I receive error status code 400", "status": "skipped", "start": 1628197387365, "stop": 1628197387365}, {"name": "And response error as Bad Request", "status": "skipped", "start": 1628197387365, "stop": 1628197387365}], "start": 1628197371312, "stop": 1628197387365, "uuid": "a740b566-9eab-4d4a-b03b-dae72e13d88d", "historyId": "6546905c91f43aa75aefa0216843c33d", "fullName": "Test Imaginary Robot for Valid and Invalid Input values for roomSize params: Alphabets passed as a coordinates for param - roomSize in the Request Body and getting Expected output", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Test Imaginary Robot for Valid and Invalid Input values for roomSize params"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}